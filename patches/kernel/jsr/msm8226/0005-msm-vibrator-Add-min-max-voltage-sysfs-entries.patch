From f9c299bbc020e7b4e3602293d9d49381542431d8 Mon Sep 17 00:00:00 2001
From: Scott Mertz <smertz@cyngn.com>
Date: Tue, 8 Jul 2014 16:19:46 -0700
Subject: [PATCH 5/7] msm: vibrator: Add min/max voltage sysfs entries

Change-Id: Icea99bb76aab73c5ab5bdb0112fbdc081bc62ba6
Signed-off-by: Scott Mertz <smertz@cyngn.com>
---
 drivers/platform/msm/qpnp-vibrator.c | 71 ++++++++++++++++++++++++++++++------
 1 file changed, 60 insertions(+), 11 deletions(-)

diff --git a/drivers/platform/msm/qpnp-vibrator.c b/drivers/platform/msm/qpnp-vibrator.c
index cc26595..29d1d0e 100644
--- a/drivers/platform/msm/qpnp-vibrator.c
+++ b/drivers/platform/msm/qpnp-vibrator.c
@@ -26,11 +26,10 @@
 #define QPNP_VIB_VTG_CTL(base)		(base + 0x41)
 #define QPNP_VIB_EN_CTL(base)		(base + 0x46)
 
-#define QPNP_VIB_MAX_LEVEL		31
-#define QPNP_VIB_MIN_LEVEL		12
-
 #define QPNP_VIB_DEFAULT_TIMEOUT	15000
 #define QPNP_VIB_DEFAULT_VTG_LVL	3100
+#define QPNP_VIB_DEFAULT_VTG_MAX	3100
+#define QPNP_VIB_DEFAULT_VTG_MIN	1200
 
 #define QPNP_VIB_EN			BIT(7)
 #define QPNP_VIB_VTG_SET_MASK		0x1F
@@ -46,6 +45,8 @@ struct qpnp_vib {
 	u8  reg_en_ctl;
 	u16 base;
 	int state;
+	int vtg_min;
+	int vtg_max;
 	int vtg_level;
 	int timeout;
 	spinlock_t lock;
@@ -53,6 +54,28 @@ struct qpnp_vib {
 
 static struct qpnp_vib *vib_dev;
 
+static ssize_t qpnp_vib_min_show(struct device *dev,
+                                        struct device_attribute *attr,
+                                        char *buf)
+{
+        struct timed_output_dev *tdev = dev_get_drvdata(dev);
+        struct qpnp_vib *vib = container_of(tdev, struct qpnp_vib,
+                                         timed_dev);
+
+        return scnprintf(buf, PAGE_SIZE, "%d\n", vib->vtg_min);
+}
+
+static ssize_t qpnp_vib_max_show(struct device *dev,
+                                        struct device_attribute *attr,
+                                        char *buf)
+{
+        struct timed_output_dev *tdev = dev_get_drvdata(dev);
+        struct qpnp_vib *vib = container_of(tdev, struct qpnp_vib,
+                                         timed_dev);
+
+        return scnprintf(buf, PAGE_SIZE, "%d\n", vib->vtg_max);
+}
+
 static ssize_t qpnp_vib_level_show(struct device *dev,
                                         struct device_attribute *attr,
                                         char *buf)
@@ -81,12 +104,12 @@ static ssize_t qpnp_vib_level_store(struct device *dev,
                 return -EINVAL;
         }
 
-        if (val < QPNP_VIB_MIN_LEVEL) {
-                pr_err("%s: level %d not in range (%d - %d), using min.", __func__, val, QPNP_VIB_MIN_LEVEL, QPNP_VIB_MAX_LEVEL);
-                val = QPNP_VIB_MIN_LEVEL;
-        } else if (val > QPNP_VIB_MAX_LEVEL) {
-                pr_err("%s: level %d not in range (%d - %d), using max.", __func__, val, QPNP_VIB_MIN_LEVEL, QPNP_VIB_MAX_LEVEL);
-                val = QPNP_VIB_MAX_LEVEL;
+        if (val < vib->vtg_min) {
+                pr_err("%s: level %d not in range (%d - %d), using min.", __func__, val, vib->vtg_min, vib->vtg_max);
+                val = vib->vtg_min;
+        } else if (val > vib->vtg_max) {
+                pr_err("%s: level %d not in range (%d - %d), using max.", __func__, val, vib->vtg_min, vib->vtg_max);
+                val = vib->vtg_max;
         }
 
         vib->vtg_level = val;
@@ -95,6 +118,8 @@ static ssize_t qpnp_vib_level_store(struct device *dev,
 }
 
 static DEVICE_ATTR(vtg_level, S_IRUGO | S_IWUSR, qpnp_vib_level_show, qpnp_vib_level_store);
+static DEVICE_ATTR(vtg_min, S_IRUGO, qpnp_vib_min_show, NULL);
+static DEVICE_ATTR(vtg_max, S_IRUGO, qpnp_vib_max_show, NULL);
 
 static int qpnp_vib_read_u8(struct qpnp_vib *vib, u8 *data, u16 reg)
 {
@@ -134,8 +159,8 @@ int qpnp_vibrator_config(struct qpnp_vib_config *vib_cfg)
 
 	level = vib_cfg->drive_mV / 100;
 	if (level) {
-		if ((level < QPNP_VIB_MIN_LEVEL) ||
-				(level > QPNP_VIB_MAX_LEVEL)) {
+		if ((level < vib_dev->vtg_min) ||
+				(level > vib_dev->vtg_max)) {
 			dev_err(&vib_dev->spmi->dev, "Invalid voltage level\n");
 			return -EINVAL;
 		}
@@ -314,7 +339,29 @@ static int __devinit qpnp_vibrator_probe(struct spmi_device *spmi)
 		return rc;
 	}
 
+	vib->vtg_max = QPNP_VIB_DEFAULT_VTG_MAX;
+	rc = of_property_read_u32(spmi->dev.of_node,
+			"qcom,vib-vtg-max-mV", &temp_val);
+	if (!rc) {
+		vib->vtg_max = min(temp_val, (u32)QPNP_VIB_DEFAULT_VTG_MAX);
+	} else if (rc != -EINVAL) {
+		dev_err(&spmi->dev, "Unable to read vtg max level\n");
+		return rc;
+	}
+
+	vib->vtg_min = QPNP_VIB_DEFAULT_VTG_MIN;
+	rc = of_property_read_u32(spmi->dev.of_node,
+			"qcom,vib-vtg-min-mV", &temp_val);
+	if (!rc) {
+		vib->vtg_min = max(temp_val, (u32)QPNP_VIB_DEFAULT_VTG_MIN);
+	} else if (rc != -EINVAL) {
+		dev_err(&spmi->dev, "Unable to read vtg min level\n");
+		return rc;
+	}
+
 	vib->vtg_level /= 100;
+	vib->vtg_min /= 100;
+	vib->vtg_max /= 100;
 
 	vib_resource = spmi_get_resource(spmi, 0, IORESOURCE_MEM, 0);
 	if (!vib_resource) {
@@ -351,6 +398,8 @@ static int __devinit qpnp_vibrator_probe(struct spmi_device *spmi)
 		return rc;
 
 		device_create_file(vib->timed_dev.dev, &dev_attr_vtg_level);
+		device_create_file(vib->timed_dev.dev, &dev_attr_vtg_min);
+		device_create_file(vib->timed_dev.dev, &dev_attr_vtg_max);
 
 	vib_dev = vib;
 
-- 
2.5.0

