From 207d29e6f62b0d2728c37c32f6e1210f8609ed1f Mon Sep 17 00:00:00 2001
From: Siddharth Bhal <sbhal@codeaurora.org>
Date: Tue, 7 Apr 2015 16:31:04 +0530
Subject: [PATCH 24/31] wcnss: Ensure wcnss clocks are present before register
 dump

Adding wcnss 'measure' and 'debug' clock checks before dumping
wcnss pronto registers. This is required to ensure that registers
are dumped only when required clocks are present, otherwise it
could lead to undefined behavior.

CRs-Fixed: 815208
Change-Id: Iaa920b7f9ad02ef0a4e9e1537f2cd5de8be60b63
Signed-off-by: Siddharth Bhal <sbhal@codeaurora.org>
---
 drivers/net/wireless/wcnss/wcnss_wlan.c | 19 +++++++++++++++++++
 include/linux/wcnss_wlan.h              |  1 +
 2 files changed, 20 insertions(+)

diff --git a/drivers/net/wireless/wcnss/wcnss_wlan.c b/drivers/net/wireless/wcnss/wcnss_wlan.c
index dc86930..7b3970a 100644
--- a/drivers/net/wireless/wcnss/wcnss_wlan.c
+++ b/drivers/net/wireless/wcnss/wcnss_wlan.c
@@ -954,6 +954,25 @@ void wcnss_reset_intr(void)
 }
 EXPORT_SYMBOL(wcnss_reset_intr);
 
+void wcnss_reset_fiq(bool clk_chk_en)
+{
+	if (wcnss_hardware_type() == WCNSS_PRONTO_HW) {
+		if (clk_chk_en) {
+			wcnss_log_debug_regs_on_bite();
+		} else {
+			wcnss_pronto_log_debug_regs();
+			if (wcnss_get_mux_control())
+				wcnss_log_iris_regs();
+		}
+		/* Insert memory barrier before writing fiq register */
+		wmb();
+		__raw_writel(1 << 16, penv->fiq_reg);
+	} else {
+		wcnss_riva_log_debug_regs();
+	}
+}
+EXPORT_SYMBOL(wcnss_reset_fiq);
+
 static int wcnss_create_sysfs(struct device *dev)
 {
 	int ret;
diff --git a/include/linux/wcnss_wlan.h b/include/linux/wcnss_wlan.h
index 55d6b1e..747325f 100644
--- a/include/linux/wcnss_wlan.h
+++ b/include/linux/wcnss_wlan.h
@@ -76,6 +76,7 @@ int wcnss_hardware_type(void);
 void *wcnss_prealloc_get(unsigned int size);
 int wcnss_prealloc_put(void *ptr);
 void wcnss_reset_intr(void);
+void wcnss_reset_fiq(bool clk_chk_en);
 void wcnss_suspend_notify(void);
 void wcnss_resume_notify(void);
 void wcnss_riva_log_debug_regs(void);
-- 
2.5.0

