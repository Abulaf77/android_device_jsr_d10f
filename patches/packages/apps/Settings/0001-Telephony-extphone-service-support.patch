From ad6fe3fc9878a0273399794cec58b01da9229624 Mon Sep 17 00:00:00 2001
From: Deepak Kundra <deepakkundra@gmail.com>
Date: Fri, 11 Mar 2016 13:54:25 -0800
Subject: [PATCH] Telephony: extphone service support

Issue-id:CYNGNOS-2226

Revert "Break MSIM dependency on qci-telephony-framework"
Revert "Settings: Utilize frameworks sms prompt interfaces as fallback."
Revert "Hide manual provisioning switch when extphone framework is not present"

Change-Id: I80a62a712a2d1d70d70673f308b246a997077b49
http://review.cyanogenmod.org/#/c/135904/
---
 .../android/settings/sim/SimDialogActivity.java    | 20 +++++++---------
 src/com/android/settings/sim/SimSettings.java      | 27 ++++++++++------------
 2 files changed, 20 insertions(+), 27 deletions(-)

diff --git a/src/com/android/settings/sim/SimDialogActivity.java b/src/com/android/settings/sim/SimDialogActivity.java
index 0b73d65..0fe28b5 100644
--- a/src/com/android/settings/sim/SimDialogActivity.java
+++ b/src/com/android/settings/sim/SimDialogActivity.java
@@ -28,7 +28,6 @@ import android.os.ServiceManager;
 import android.telecom.PhoneAccount;
 import android.telecom.PhoneAccountHandle;
 import android.telecom.TelecomManager;
-import android.telephony.SmsManager;
 import android.telephony.SubscriptionInfo;
 import android.telephony.SubscriptionManager;
 import android.telephony.TelephonyManager;
@@ -44,6 +43,7 @@ import android.widget.RadioButton;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import cyanogenmod.app.CMTelephonyManager;
 import com.android.internal.telephony.IExtTelephony;
 import com.android.settings.R;
 import com.android.settings.Utils;
@@ -62,8 +62,7 @@ public class SimDialogActivity extends Activity {
     public static final int SMS_PICK = 2;
     public static final int PREFERRED_PICK = 3;
 
-    private IExtTelephony mExtTelephony = IExtTelephony.Stub.
-            asInterface(ServiceManager.getService("extphone"));
+    private IExtTelephony mExtTelephony = null;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -71,6 +70,10 @@ public class SimDialogActivity extends Activity {
         final Bundle extras = getIntent().getExtras();
         final int dialogType = extras.getInt(DIALOG_TYPE_KEY, INVALID_PICK);
 
+        final String extphone = CMTelephonyManager.getExtService(null);
+        mExtTelephony = IExtTelephony.Stub.asInterface(ServiceManager.getService(extphone));
+        Log.d(TAG, "CMTelephonyManager.getExtService: " + mExtTelephony);
+
         switch (dialogType) {
             case DATA_PICK:
             case CALLS_PICK:
@@ -212,11 +215,6 @@ public class SimDialogActivity extends Activity {
                                 } catch (NullPointerException ex) {
                                     Log.e(TAG, "NullPointerException @setSMSPromptEnabled" + ex);
                                 }
-
-                                //Regardless, ignore the secondary telephony framework
-                                if (mExtTelephony == null) {
-                                    SmsManager.getDefault().setSMSPromptEnabled(isSmsPrompt);
-                                }
                                 break;
                             default:
                                 throw new IllegalArgumentException("Invalid dialog type "
@@ -276,11 +274,9 @@ public class SimDialogActivity extends Activity {
                 isSMSPrompt = mExtTelephony.isSMSPromptEnabled();
             } catch (RemoteException | NullPointerException e) {
                 // Assume sms prompt is disabled
+                Log.e(TAG, "RemoteException |NullPointerException @isSMSPromptEnabled" + e);
             }
-            // External telephony interfaces may not exist, fall back to our impl
-            if (mExtTelephony == null) {
-                isSMSPrompt = SmsManager.getDefault().isSMSPromptEnabled();
-            }
+
             for (int i = 0; i < selectableSubInfoLength; ++i) {
                 final SubscriptionInfo sir = subInfoList.get(i);
                 smsSubInfoList.add(sir);
diff --git a/src/com/android/settings/sim/SimSettings.java b/src/com/android/settings/sim/SimSettings.java
index 20a401e..1603a32 100644
--- a/src/com/android/settings/sim/SimSettings.java
+++ b/src/com/android/settings/sim/SimSettings.java
@@ -40,7 +40,6 @@ import android.preference.PreferenceCategory;
 import android.provider.SearchIndexableResource;
 import android.provider.Settings;
 import android.telephony.PhoneStateListener;
-import android.telephony.SmsManager;
 import android.telephony.SubscriptionInfo;
 import android.telephony.SubscriptionManager;
 import android.telephony.TelephonyManager;
@@ -62,6 +61,8 @@ import com.android.settings.Utils;
 import com.android.settings.search.BaseSearchIndexProvider;
 import com.android.settings.search.Indexable;
 import com.android.settings.R;
+
+import cyanogenmod.app.CMTelephonyManager;
 import com.android.internal.telephony.IExtTelephony;
 import com.android.internal.telephony.TelephonyProperties;
 
@@ -89,8 +90,7 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
     private static final String MOBILE_NETWORK_CATEGORY = "mobile_network";
     private static final String KEY_PRIMARY_SUB_SELECT = "select_primary_sub";
 
-    private IExtTelephony mExtTelephony = IExtTelephony.Stub.
-            asInterface(ServiceManager.getService("extphone"));
+    private IExtTelephony mExtTelephony = null;
 
     /**
      * By UX design we use only one Subscription Information(SubInfo) record per SIM slot.
@@ -155,6 +155,9 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
 
         IntentFilter intentFilter = new IntentFilter(ACTION_UICC_MANUAL_PROVISION_STATUS_CHANGED);
         mContext.registerReceiver(mReceiver, intentFilter);
+
+        final String extphone = CMTelephonyManager.getExtService(null);
+        mExtTelephony = IExtTelephony.Stub.asInterface(ServiceManager.getService(extphone));
     }
 
     @Override
@@ -250,10 +253,6 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
         } catch (NullPointerException ex) {
             loge("NullPointerException @isSMSPromptEnabled" + ex);
         }
-        // External telephony interfaces may not exist, fall back to our impl
-        if (mExtTelephony == null) {
-            isSMSPrompt = SmsManager.getDefault().isSMSPromptEnabled();
-        }
         log("[updateSmsValues] isSMSPrompt: " + isSMSPrompt);
         if (isSMSPrompt || sir == null) {
             simPref.setSummary(mContext.getResources().getString(
@@ -451,8 +450,8 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
         private static final int PROGRESS_DLG_TIME_OUT = 30000;
         private static final int MSG_DELAY_TIME = 2000;
 
-        private IExtTelephony mExtTelephony;
-
+        private IExtTelephony mExtTelephony = null;
+        private String extphone = null;
 
         public SimEnablerPreference(Context context, SubscriptionInfo sir, int slotId) {
             super(context, (AttributeSet)null,
@@ -468,7 +467,8 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
                 setWidgetLayoutResource(R.layout.custom_sim_switch);
             }
 
-            mExtTelephony = IExtTelephony.Stub.asInterface(ServiceManager.getService("extphone"));
+            extphone = CMTelephonyManager.getExtService(null);
+            mExtTelephony = IExtTelephony.Stub.asInterface(ServiceManager.getService(extphone));
 
             setSwitchVisibility(View.VISIBLE);
             setKey("sim" + mSlotId);
@@ -511,7 +511,8 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
             // Disable manual provisioning option to user when
             // device is in Airplane mode. Hide it if the extphone framework
             // is not present, as the operation relies on said framework.
-            if (mExtTelephony == null) {
+            // Also hide it if the service is cmtelephonymanagerext
+            if (mExtTelephony == null ||(!extphone.equals("extphone")) ) {
                 mSwitch.setVisibility(View.GONE);
             } else {
                 mSwitch.setVisibility(View.VISIBLE);
@@ -535,10 +536,6 @@ public class SimSettings extends RestrictedSettingsFragment implements Indexable
                 loge("Failed to get pref, slotId: "+ mSlotId +" Exception: " + ex);
             }
 
-            if (mUiccProvisionStatus[mSlotId] == INVALID_STATE) {
-                mUiccProvisionStatus[mSlotId] = PROVISIONED;
-            }
-
             boolean isSubValid = isCurrentSubValid();
             setEnabled(isSubValid);
 
-- 
2.5.0

