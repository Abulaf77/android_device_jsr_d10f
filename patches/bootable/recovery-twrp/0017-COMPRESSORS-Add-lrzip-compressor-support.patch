From 496f996c76e4d6279037758d0471309bc28f7f52 Mon Sep 17 00:00:00 2001
From: S-trace <S-trace@list.ru>
Date: Mon, 13 Mar 2017 21:26:55 +0300
Subject: [PATCH 17/20] [COMPRESSORS] Add lrzip compressor support

---
 Android.mk                     |   3 +-
 gui/theme/common/landscape.xml |   6 ++
 gui/theme/common/portrait.xml  |   1 +
 gui/theme/common/watch.xml     |   1 +
 lrzip/Android.mk               |  94 ++++++++++++++++
 lrzip/config.h                 | 236 +++++++++++++++++++++++++++++++++++++++++
 prebuilt/Android.mk            |   1 +
 twrp-functions.cpp             |   9 ++
 twrpTar.cpp                    |   3 +
 9 files changed, 353 insertions(+), 1 deletion(-)
 create mode 100644 lrzip/Android.mk
 create mode 100644 lrzip/config.h

diff --git a/Android.mk b/Android.mk
index fe740f8..7b97ade 100644
--- a/Android.mk
+++ b/Android.mk
@@ -464,7 +464,7 @@ ifeq ($(TWRP_INCLUDE_LOGCAT), true)
     endif
 endif
 ifneq ($(TW_NO_ADVANCED_COMPRESSION), true)
-    LOCAL_ADDITIONAL_DEPENDENCIES += uunpack zstd pbzip2 lzop
+    LOCAL_ADDITIONAL_DEPENDENCIES += uunpack zstd pbzip2 lzop lrzip
 endif
 # Allow devices to specify device-specific recovery dependencies
 ifneq ($(TARGET_RECOVERY_DEVICE_MODULES),)
@@ -738,6 +738,7 @@ ifneq ($(TW_NO_ADVANCED_COMPRESSION), true)
     include $(commands_recovery_local_path)/zstd/Android.mk
     include $(commands_recovery_local_path)/pbzip2/Android.mk
     include $(commands_recovery_local_path)/lzop/Android.mk
+    include $(commands_recovery_local_path)/lrzip/Android.mk
 endif
 
 # FB2PNG
diff --git a/gui/theme/common/landscape.xml b/gui/theme/common/landscape.xml
index 4e5cd5a..c8433f9 100644
--- a/gui/theme/common/landscape.xml
+++ b/gui/theme/common/landscape.xml
@@ -1772,6 +1772,11 @@
 				<listitem name="pbzip2 -7">pbzip2 -7</listitem>
 				<listitem name="pbzip2 -8">pbzip2 -8</listitem>
 				<listitem name="pbzip2 -9">pbzip2 -9</listitem>
+				<listitem name="lzop -1">lzop -1</listitem>
+				<listitem name="lzop -3">lzop -3</listitem>
+				<listitem name="lzop -7">lzop -7</listitem>
+				<listitem name="lzop -8">lzop -8</listitem>
+				<listitem name="lzop -9">lzop -9</listitem>
 				<listitem name="zstd -1">zstd -1</listitem>
 				<listitem name="zstd -2">zstd -2</listitem>
 				<listitem name="zstd -3">zstd -3</listitem>
@@ -1791,6 +1796,7 @@
 				<listitem name="zstd -17">zstd -17</listitem>
 				<listitem name="zstd -18">zstd -18</listitem>
 				<listitem name="zstd -19">zstd -19</listitem>
+				<listitem name="lrzip">lrzip</listitem>
 			</listbox>
 
 			<button style="main_button">
diff --git a/gui/theme/common/portrait.xml b/gui/theme/common/portrait.xml
index d4cbc28..ea19f28 100644
--- a/gui/theme/common/portrait.xml
+++ b/gui/theme/common/portrait.xml
@@ -1841,6 +1841,7 @@
 				<listitem name="zstd -17">zstd -17</listitem>
 				<listitem name="zstd -18">zstd -18</listitem>
 				<listitem name="zstd -19">zstd -19</listitem>
+				<listitem name="lrzip">lrzip</listitem>
 				<data name="tw_compressor_guisel" />
 			</listbox>
 
diff --git a/gui/theme/common/watch.xml b/gui/theme/common/watch.xml
index e52c160..6f2f449 100644
--- a/gui/theme/common/watch.xml
+++ b/gui/theme/common/watch.xml
@@ -2173,6 +2173,7 @@
 				<listitem name="zstd -17">zstd -17</listitem>
 				<listitem name="zstd -18">zstd -18</listitem>
 				<listitem name="zstd -19">zstd -19</listitem>
+				<listitem name="lrzip">lrzip</listitem>
 			</listbox>
 
 			<button>
diff --git a/lrzip/Android.mk b/lrzip/Android.mk
new file mode 100644
index 0000000..4ce958c
--- /dev/null
+++ b/lrzip/Android.mk
@@ -0,0 +1,94 @@
+LOCAL_PATH := $(call my-dir)
+
+include $(CLEAR_VARS)
+
+LOCAL_MODULE := lrzip
+LOCAL_MODULE_TAGS := eng optional
+LOCAL_MODULE_CLASS := RECOVERY_EXECUTABLES
+LOCAL_MODULE_PATH := $(TARGET_RECOVERY_ROOT_OUT)/sbin
+
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/lzma/C/ bionic/libc/include/ $(LOCAL_PATH)/ external/zlib/
+LOCAL_C_INCLUDES += external/lzo/include/
+LOCAL_C_INCLUDES += external/bzip2/
+
+LOCAL_CFLAGS += -std=gnu99 -O2 -fomit-frame-pointer \
+	-D_REENTRANT \
+	-DCOMPRESS_MF_MT \
+	-DDISABLE_BZIP2 \
+	-DDISABLE_ZPAQ
+# 	-DDISABLE_LZO
+
+LOCAL_CFLAGS += \
+	-D_GNU_SOURCE \
+	-DHAVE_ERRNO \
+	-DHAVE_ALLOCA_H \
+	-DHAVE_ERRNO_H \
+	-DHAVE_STRERROR \
+	-DHAVE_CTYPE_H \
+	-DHAVE_INTTYPES_H \
+	-DHAVE_PTHREAD_H \
+	-DHAVE_SETENV \
+	-DHAVE_STDINT_H \
+	-DHAVE_STDLIB_H \
+	-DHAVE_STRING_H \
+	-DHAVE_STRINGS_H \
+	-DHAVE_SYS_MMAN_H \
+	-DHAVE_SYS_RESOURCE_H \
+	-DHAVE_SYS_STAT_H \
+	-DHAVE_SYS_TIME_H \
+	-DHAVE_SYS_TYPES_H \
+	-DHAVE_UNISTD_H \
+	-DSIZEOF_SHORT=SIZEOF\(short\) \
+	-DSIZEOF_INT=4 \
+	-DSIZEOF_LONG=8 \
+	-D__UNUSED__=__attribute__\(\(unused\)\)
+
+LOCAL_CFLAGS += \
+	-DLRZIP_MAJOR_VERSION=0 \
+	-DLRZIP_MINOR_SUBVERSION=31 \
+	-DLRZIP_MINOR_VERSION=6 \
+	-DVERSION="0.631"
+
+LOCAL_CFLAGS += \
+	-DPACKAGE="lrzip" \
+	-DPACKAGE_BUGREPORT="kernel@kolivas.org" \
+	-DPACKAGE_NAME="lrzip" \
+	-DPACKAGE_STRING="lrzip 0.631" \
+	-DPACKAGE_TARNAME="lrzip" \
+	-DPACKAGE_URL="" \
+	-DPACKAGE_VERSION="0.631" \
+
+
+LOCAL_SRC_FILES :=  \
+	lzma/C/7zCrc.c \
+	lzma/C/Alloc.c \
+	lzma/C/LzFind.c \
+	lzma/C/LzFindMt.c \
+	lzma/C/LzmaDec.c \
+	lzma/C/LzmaEnc.c \
+	lzma/C/LzmaLib.c \
+	lzma/C/Threads.c \
+	liblrzip.c \
+	lrzip.c \
+	rzip.c \
+	runzip.c \
+	stream.c \
+	util.c \
+	md5.c \
+	aes.c \
+	sha4.c \
+	main.c
+
+LOCAL_SRC_FILES +=  \
+	libzpaq/libzpaq.cpp
+
+LOCAL_STATIC_LIBRARIES += \
+	libbz
+
+LOCAL_STATIC_LIBRARIES += \
+	liblzo-static
+
+LOCAL_SHARED_LIBRARIES := \
+	libz
+
+include $(BUILD_EXECUTABLE)
diff --git a/lrzip/config.h b/lrzip/config.h
new file mode 100644
index 0000000..2f355c7
--- /dev/null
+++ b/lrzip/config.h
@@ -0,0 +1,236 @@
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define if building universal (internal helper macro) */
+/* #undef AC_APPLE_UNIVERSAL_BUILD */
+
+/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
+   systems. This function is required for `alloca.c' support on those systems.
+   */
+/* #undef CRAY_STACKSEG_END */
+
+/* Define to 1 if using `alloca.c'. */
+/* #undef C_ALLOCA */
+
+/* Define to 1 if you have `alloca', as a function or macro. */
+#define HAVE_ALLOCA 1
+
+/* Define to 1 if you have the <alloca.h> header file. */
+#define HAVE_ALLOCA_H 1
+
+/* Define to 1 if you have the <arpa/inet.h> header file. */
+#define HAVE_ARPA_INET_H 1
+
+/* Define to 1 if you have the <ctype.h> header file. */
+#define HAVE_CTYPE_H 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define to 1 if you have the <endian.h> header file. */
+#define HAVE_ENDIAN_H 1
+
+/* Define to 1 if you have the <errno.h> header file. */
+#define HAVE_ERRNO_H 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define HAVE_FCNTL_H 1
+
+/* Define to 1 if you have the `getopt_long' function. */
+#define HAVE_GETOPT_LONG 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* */
+#define HAVE_LARGE_FILES 1
+
+/* Define to 1 if you have the `bz2' library (-lbz2). */
+#define HAVE_LIBBZ2 1
+
+/* Define to 1 if you have the `lzo2' library (-llzo2). */
+#define HAVE_LIBLZO2 1
+
+/* Define to 1 if you have the `m' library (-lm). */
+#define HAVE_LIBM 1
+
+/* Define to 1 if you have the `pthread' library (-lpthread). */
+#define HAVE_LIBPTHREAD 1
+
+/* Define to 1 if you have the `z' library (-lz). */
+#define HAVE_LIBZ 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the `mmap' function. */
+#define HAVE_MMAP 1
+
+/* Define to 1 if you have the <pthread.h> header file. */
+#define HAVE_PTHREAD_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the `strerror' function. */
+#define HAVE_STRERROR 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the <sys/endian.h> header file. */
+/* #undef HAVE_SYS_ENDIAN_H */
+
+/* Define to 1 if you have the <sys/mman.h> header file. */
+#define HAVE_SYS_MMAN_H 1
+
+/* Define to 1 if you have the <sys/resource.h> header file. */
+#define HAVE_SYS_RESOURCE_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to 1 if your compiler has __attribute__ */
+#define HAVE___ATTRIBUTE__ 1
+
+/* Major version */
+#define LRZIP_MAJOR_VERSION 0
+
+/* Micro version */
+#define LRZIP_MINOR_SUBVERSION 21
+
+/* Minor version */
+#define LRZIP_MINOR_VERSION 6
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#define LT_OBJDIR ".libs/"
+
+/* Name of package */
+#define PACKAGE "lrzip"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "kernel@kolivas.org"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "lrzip"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "lrzip 0.621"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "lrzip"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "0.621"
+
+/* The size of `int', as computed by sizeof. */
+#define SIZEOF_INT 4
+
+/* The size of `long', as computed by sizeof. */
+#define SIZEOF_LONG 8
+
+/* The size of `short', as computed by sizeof. */
+#define SIZEOF_SHORT 2
+
+/* If using the C implementation of alloca, define if you know the
+   direction of stack growth for your system; otherwise it will be
+   automatically deduced at runtime.
+	STACK_DIRECTION > 0 => grows toward higher addresses
+	STACK_DIRECTION < 0 => grows toward lower addresses
+	STACK_DIRECTION = 0 => direction of growth unknown */
+/* #undef STACK_DIRECTION */
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Enable extensions on AIX 3, Interix.  */
+#ifndef _ALL_SOURCE
+# define _ALL_SOURCE 1
+#endif
+/* Enable GNU extensions on systems that have them.  */
+#ifndef _GNU_SOURCE
+# define _GNU_SOURCE 1
+#endif
+/* Enable threading extensions on Solaris.  */
+#ifndef _POSIX_PTHREAD_SEMANTICS
+# define _POSIX_PTHREAD_SEMANTICS 1
+#endif
+/* Enable extensions on HP NonStop.  */
+#ifndef _TANDEM_SOURCE
+# define _TANDEM_SOURCE 1
+#endif
+/* Enable general extensions on Solaris.  */
+#ifndef __EXTENSIONS__
+# define __EXTENSIONS__ 1
+#endif
+
+
+/* Version number of package */
+#define VERSION "0.621"
+
+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
+   significant byte first (like Motorola and SPARC, unlike Intel). */
+#if defined AC_APPLE_UNIVERSAL_BUILD
+# if defined __BIG_ENDIAN__
+#  define WORDS_BIGENDIAN 1
+# endif
+#else
+# ifndef WORDS_BIGENDIAN
+/* #  undef WORDS_BIGENDIAN */
+# endif
+#endif
+
+/* Enable large inode numbers on Mac OS X 10.5.  */
+#ifndef _DARWIN_USE_64_BIT_INODE
+# define _DARWIN_USE_64_BIT_INODE 1
+#endif
+
+/* Number of bits in a file offset, on hosts where this is settable. */
+/* #undef _FILE_OFFSET_BITS */
+
+/* Define for large files, on AIX-style hosts. */
+/* #undef _LARGE_FILES */
+
+/* Define to 1 if on MINIX. */
+/* #undef _MINIX */
+
+/* Define to 2 if the system does not provide POSIX.1 features except with
+   this defined. */
+/* #undef _POSIX_1_SOURCE */
+
+/* Define to 1 if you need to in order for `stat' and other things to work. */
+/* #undef _POSIX_SOURCE */
+
+/* Macro declaring a function argument to be unused */
+#define __UNUSED__ __attribute__((unused))
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
+
+/* Define to `long int' if <sys/types.h> does not define. */
+/* #undef off_t */
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+/* #undef size_t */
diff --git a/prebuilt/Android.mk b/prebuilt/Android.mk
index 0f3bbdd..ffba4a9 100644
--- a/prebuilt/Android.mk
+++ b/prebuilt/Android.mk
@@ -31,6 +31,7 @@ else
 	endif
 endif
 ifneq ($(TW_NO_ADVANCED_COMPRESSION), true)
+	RELINK_SOURCE_FILES += $(TARGET_RECOVERY_ROOT_OUT)/sbin/lrzip
 	RELINK_SOURCE_FILES += $(TARGET_RECOVERY_ROOT_OUT)/sbin/pbzip2
 	RELINK_SOURCE_FILES += $(TARGET_RECOVERY_ROOT_OUT)/sbin/zstd
 	RELINK_SOURCE_FILES += $(TARGET_RECOVERY_ROOT_OUT)/sbin/uunpack
diff --git a/twrp-functions.cpp b/twrp-functions.cpp
index 3cbaa08..836cdec 100644
--- a/twrp-functions.cpp
+++ b/twrp-functions.cpp
@@ -207,6 +207,10 @@ Archive_Type TWFunc::Get_File_Type(string fn) {
 		LOGINFO("File '%s' is compressed by bzip2.\n", fn.c_str());
 		return COMPRESSED; // Compressed by bzip2
 	}
+	else if (firstbyte == 0x4c && secondbyte == 0x52 && thirdbyte == 0x5a && fourthbyte == 0x49) {
+		LOGINFO("File '%s' is compressed by lrzip.\n", fn.c_str());
+		return COMPRESSED; // Compressed by lrzip
+	}
 	else if (secondbyte == 0xb5 && thirdbyte == 0x2f && fourthbyte == 0xfd) {
 		LOGINFO("File '%s' is compressed by zstd.\n", fn.c_str());
 		return COMPRESSED; // Compressed by zstd
@@ -314,6 +318,11 @@ int TWFunc::Try_Decrypting_File(string fn, string password) {
 		free(buffer_out);
 		return 3; // Compressed by bzip2+encrypted
 	}
+	else if (firstbyte == 0x4c && secondbyte == 0x52 && thirdbyte == 0x5a && fourthbyte == 0x49) {
+		LOGINFO("Successfully decrypted '%s' and file is compressed by lrzip.\n", fn.c_str());
+		free(buffer_out);
+		return 3; // Compressed by lrzip+encrypted
+	}
 	else if (secondbyte == 0xb5 && thirdbyte == 0x2f && fourthbyte == 0xfd) {
 		LOGINFO("Successfully decrypted '%s' and file is compressed by zstd.\n", fn.c_str());
 		free(buffer_out);
diff --git a/twrpTar.cpp b/twrpTar.cpp
index 48f00a5..8f6c398 100644
--- a/twrpTar.cpp
+++ b/twrpTar.cpp
@@ -1030,6 +1030,9 @@ int twrpTar::execlpCompressor() {
 	if (compression_mode == "zstd -19")
 		ret=execlp("zstd", "zstd", "-19", "-", NULL);
 
+	if (compression_mode == "lrzip")
+		ret=execlp("lrzip", "lrzip", "-", NULL);
+
 	LOGERR("%s: '%s' ERROR (%s)!\n", __func__, compression_mode.c_str(), strerror(errno)); // Should not reach here
 	return ret;
 }
-- 
2.10.2

