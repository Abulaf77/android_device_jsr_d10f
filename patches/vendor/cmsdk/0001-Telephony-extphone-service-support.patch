From 544d6bc53fb0c6e339966c83f613a693d9d38bec Mon Sep 17 00:00:00 2001
From: Deepak Kundra <deepakkundra@gmail.com>
Date: Thu, 10 Mar 2016 17:01:27 -0800
Subject: [PATCH] Telephony: extphone service support

Issue-id:CYNGNOS-2226

Change-Id: I45d43d2b1260a9a1f2e1fc0be335b663107564d2
http://review.cyanogenmod.org/#/c/135912/4
---
 Android.mk                                         |   3 +-
 api/cm_current.txt                                 |   1 +
 .../internal/CmExtTelephonyServiceImpl.java        | 185 +++++++++++++++++++++
 cm/res/res/values/config.xml                       |   1 +
 src/java/cyanogenmod/app/CMContextConstants.java   |  12 ++
 src/java/cyanogenmod/app/CMTelephonyManager.java   |  24 +++
 system-api/cm_system-current.txt                   |   1 +
 7 files changed, 226 insertions(+), 1 deletion(-)
 create mode 100755 cm/lib/main/java/org/cyanogenmod/platform/internal/CmExtTelephonyServiceImpl.java

diff --git a/Android.mk b/Android.mk
index dad01a2..f65c17f 100644
--- a/Android.mk
+++ b/Android.mk
@@ -39,7 +39,8 @@ LOCAL_MODULE_TAGS := optional
 
 LOCAL_JAVA_LIBRARIES := \
     services \
-    org.cyanogenmod.hardware
+    org.cyanogenmod.hardware \
+    telephony-common
 
 LOCAL_SRC_FILES := \
     $(call all-java-files-under, $(cyanogenmod_src)) \
diff --git a/api/cm_current.txt b/api/cm_current.txt
index a8b7319..d5c2468 100644
--- a/api/cm_current.txt
+++ b/api/cm_current.txt
@@ -77,6 +77,7 @@ package cyanogenmod.app {
   }
 
   public class CMTelephonyManager {
+    method public static java.lang.String getExtService(java.lang.String);
     method public static cyanogenmod.app.CMTelephonyManager getInstance(android.content.Context);
     method public java.util.List<android.telephony.SubscriptionInfo> getSubInformation();
     method public boolean isDataConnectionEnabled();
diff --git a/cm/lib/main/java/org/cyanogenmod/platform/internal/CmExtTelephonyServiceImpl.java b/cm/lib/main/java/org/cyanogenmod/platform/internal/CmExtTelephonyServiceImpl.java
new file mode 100755
index 0000000..564de12
--- /dev/null
+++ b/cm/lib/main/java/org/cyanogenmod/platform/internal/CmExtTelephonyServiceImpl.java
@@ -0,0 +1,185 @@
+/**
+ * Copyright (c) 2016, The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.cyanogenmod.platform.internal;
+
+import com.android.server.SystemService;
+
+import android.content.Context;
+import android.os.IBinder;
+import android.telephony.Rlog;
+import android.util.Log;
+
+import cyanogenmod.app.CMContextConstants;
+
+import com.android.internal.telephony.IExtTelephony;
+import android.telephony.TelephonyManager;
+import android.telephony.SmsManager;
+import android.telephony.SubscriptionManager;
+import com.android.internal.telephony.SubscriptionController;
+import com.android.internal.telephony.PhoneFactory;
+import com.android.internal.telephony.Phone;
+import android.telephony.ServiceState;
+
+/**
+ * This class implements IExtTelephony aidl interface.
+ * @hide
+ */
+public class CmExtTelephonyServiceImpl extends SystemService {
+    private static final String LOG_TAG = "CmExtTelephonyServiceImpl";
+    private static final boolean DBG = true;
+
+    private Context mContext;
+    private TelephonyManager mTelephonyManager;
+
+    static final int PROVISIONED = 1;
+    static final int NOT_PROVISIONED = 0;
+    static final int INVALID_STATE = -1;
+    static final int CARD_NOT_PRESENT = -2;
+
+    private final IBinder mService = new IExtTelephony.Stub() {
+        @Override
+        public int getCurrentUiccCardProvisioningStatus(int slotId) {
+            return CmExtTelephonyServiceImpl.this.getCurrentUiccCardProvisioningStatus(slotId);
+        }
+
+        @Override
+        public int getUiccCardProvisioningUserPreference(int slotId) {
+            return CmExtTelephonyServiceImpl.this.getUiccCardProvisioningUserPreference(slotId);
+        }
+
+        @Override
+        public int activateUiccCard(int slotId) {
+            return CmExtTelephonyServiceImpl.this.activateUiccCard(slotId);
+        }
+
+        @Override
+        public int deactivateUiccCard(int slotId) {
+            return CmExtTelephonyServiceImpl.this.deactivateUiccCard(slotId);
+        }
+
+        @Override
+        public boolean isSMSPromptEnabled() {
+            return CmExtTelephonyServiceImpl.this.isSMSPromptEnabled();
+        }
+
+        @Override
+        public void setSMSPromptEnabled(boolean enabled) {
+            CmExtTelephonyServiceImpl.this.setSMSPromptEnabled(enabled);
+        }
+
+        @Override
+        public int getPhoneIdForECall() {
+            return CmExtTelephonyServiceImpl.this.getPhoneIdForECall();
+        }
+
+        @Override
+        public boolean isFdnEnabled() {
+            return CmExtTelephonyServiceImpl.this.isFdnEnabled();
+        }
+    };
+
+    public CmExtTelephonyServiceImpl(Context context) {
+        super(context);
+        mContext = context;
+    }
+
+    @Override
+    public void onStart() {
+        if (DBG) logd("CM Ext telephony service start: " + this);
+
+        publishBinderService(CMContextConstants.CM_TELEPHONY_MANAGER_EXT_SERVICE, mService);
+
+        mTelephonyManager = (TelephonyManager) mContext.getSystemService(Context.TELEPHONY_SERVICE);
+    }
+
+    private int getCurrentUiccCardProvisioningStatus(int slotId) {
+        if (DBG) logd("getCurrentUiccCardProvisioningStatus()");
+        return PROVISIONED;
+    }
+
+    private int getUiccCardProvisioningUserPreference(int slotId) {
+        if (DBG) logd("getUiccCardProvisioningUserPreference()");
+        return 0;
+    }
+
+    private int activateUiccCard(int slotId) {
+        if (DBG) logd("activateUiccCard()");
+        return 0;
+    }
+
+    private int deactivateUiccCard(int slotId) {
+        if (DBG) logd("deactivateUiccCard()");
+        return 0;
+    }
+
+    private boolean isSMSPromptEnabled() {
+        if (DBG) logd("isSMSPromptEnabled()");
+        return SmsManager.getDefault().isSMSPromptEnabled();
+    }
+
+    private void setSMSPromptEnabled(boolean enabled) {
+        if (DBG) logd("setSMSPromptEnabled()");
+        SmsManager.getDefault().setSMSPromptEnabled(enabled);
+    }
+
+    /**
+      * Place E911 call on a sub(i.e Phone) whichever is In service/Emergency Only
+      * If both subs are In service/Emergency Only then place call on voice pref sub
+      * Else choose the default phone_id = 0
+      */
+    private int getPhoneIdForECall() {
+        if (DBG) logd("getPhoneIdForECall()");
+
+        int voiceSubId = SubscriptionManager.getDefaultVoiceSubId();
+        int voicePhoneId = SubscriptionController.getInstance().getPhoneId(voiceSubId);
+        int phoneId = -1;
+        TelephonyManager tm = TelephonyManager.getDefault();
+        int phoneCount = tm.getPhoneCount();
+
+        for (int phId = 0; phId < phoneCount; phId++) {
+            Phone phone = PhoneFactory.getPhone(phId);
+            int ss = phone.getServiceState().getState();
+            if(ss == ServiceState.STATE_IN_SERVICE ||phone.getServiceState().isEmergencyOnly()) {
+                phoneId = phId;
+                if (phoneId == voicePhoneId) break;
+            }
+        }
+
+        if (DBG) logd("Voice phoneId in service = "+ phoneId);
+
+        if (phoneId == -1) {
+            phoneId = 0; // default phoneId
+        }
+
+        if (DBG) logd("Voice phoneId in service = " + phoneId + " preferred phoneId =" + voicePhoneId);
+
+        return phoneId;
+    }
+
+    private boolean isFdnEnabled() {
+        if (DBG) logd("isFdnEnabled()");
+        return false;
+    }
+
+    private void logd(String string) {
+        Rlog.d(LOG_TAG, string);
+    }
+
+    private void loge(String string) {
+        Rlog.e(LOG_TAG, string);
+    }
+}
diff --git a/cm/res/res/values/config.xml b/cm/res/res/values/config.xml
index 179ade2..8659563 100644
--- a/cm/res/res/values/config.xml
+++ b/cm/res/res/values/config.xml
@@ -84,6 +84,7 @@
         <item>org.cyanogenmod.platform.internal.ProfileManagerService</item>
         <item>org.cyanogenmod.platform.internal.PartnerInterfaceService</item>
         <item>org.cyanogenmod.platform.internal.CMTelephonyManagerService</item>
+        <item>org.cyanogenmod.platform.internal.CmExtTelephonyServiceImpl</item>
         <item>org.cyanogenmod.platform.internal.CMHardwareService</item>
         <item>org.cyanogenmod.platform.internal.AppSuggestManagerService</item>
         <item>org.cyanogenmod.platform.internal.PerformanceManagerService</item>
diff --git a/src/java/cyanogenmod/app/CMContextConstants.java b/src/java/cyanogenmod/app/CMContextConstants.java
index 6b2cb23..4c6cd4d 100644
--- a/src/java/cyanogenmod/app/CMContextConstants.java
+++ b/src/java/cyanogenmod/app/CMContextConstants.java
@@ -78,6 +78,18 @@ public final class CMContextConstants {
 
     /**
      * Use with {@link android.content.Context#getSystemService} to retrieve a
+     * {@link cyanogenmod.app.CMTelephonyManager} to manage the phone and
+     * data connection.
+     *
+     * @see android.content.Context#getSystemService
+     * @see cyanogenmod.app.CMTelephonyManager
+     *
+     * @hide
+     */
+    public static final String CM_TELEPHONY_MANAGER_EXT_SERVICE = "cmtelephonymanagerext";
+
+    /**
+     * Use with {@link android.content.Context#getSystemService} to retrieve a
      * {@link cyanogenmod.hardware.CMHardwareManager} to manage the extended
      * hardware features of the device.
      *
diff --git a/src/java/cyanogenmod/app/CMTelephonyManager.java b/src/java/cyanogenmod/app/CMTelephonyManager.java
index 4285f44..c703082 100644
--- a/src/java/cyanogenmod/app/CMTelephonyManager.java
+++ b/src/java/cyanogenmod/app/CMTelephonyManager.java
@@ -20,6 +20,7 @@ import android.content.Context;
 import android.os.IBinder;
 import android.os.RemoteException;
 import android.os.ServiceManager;
+import android.os.SystemProperties;
 import android.telephony.SubscriptionInfo;
 import android.util.Log;
 import android.util.Slog;
@@ -49,6 +50,10 @@ public class CMTelephonyManager {
     private static CMTelephonyManager sCMTelephonyManagerInstance;
     private Context mContext;
 
+    private static final String PROPERTY_TELEPHONY_MANAGER_EXT_SERVICE = "persist.radio.cm.ext";
+    //Set persist.radio.cm.ext to extphone in the case we want to use Qualcomm's qti-telephony-common
+    //private static final String CAF_TELEPHONY_MANAGER_EXT_SERVICE = "extphone";
+
     private CMTelephonyManager(Context context) {
         Context appContext = context.getApplicationContext();
         if (appContext != null) {
@@ -355,4 +360,23 @@ public class CMTelephonyManager {
             Slog.w(TAG, "warning: no cm telephony manager service");
         }
     }
+
+    /**
+     * Returns name of a service with the given name.
+     *
+     * @param name If the name is set to NULL then the extphone or cmtelephonymanagerext
+     *              is selected based on the property persist.radio.cm.ext. If the
+     *              service name is specified then the service is returned.
+     */
+    public static String getExtService(String name) {
+        String extService = SystemProperties.get(PROPERTY_TELEPHONY_MANAGER_EXT_SERVICE, CMContextConstants.CM_TELEPHONY_MANAGER_EXT_SERVICE);
+
+        if(name != null && !name.isEmpty()) {
+            extService = name;
+        }
+
+        Log.w(TAG, " getting service name : " + extService);
+
+        return extService;
+    }
 }
diff --git a/system-api/cm_system-current.txt b/system-api/cm_system-current.txt
index a8b7319..d5c2468 100644
--- a/system-api/cm_system-current.txt
+++ b/system-api/cm_system-current.txt
@@ -77,6 +77,7 @@ package cyanogenmod.app {
   }
 
   public class CMTelephonyManager {
+    method public static java.lang.String getExtService(java.lang.String);
     method public static cyanogenmod.app.CMTelephonyManager getInstance(android.content.Context);
     method public java.util.List<android.telephony.SubscriptionInfo> getSubInformation();
     method public boolean isDataConnectionEnabled();
-- 
2.5.0

